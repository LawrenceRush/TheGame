{"ast":null,"code":"import { func } from \"prop-types\";\nexport default function sketch(p) {\n  var rotation = 0;\n\n  p.setup = function () {\n    generateCanvas();\n    generateFloor();\n    generateWalls();\n    var detective = new MainCharacter();\n  };\n\n  p.draw = function () {\n    detective.render();\n  }; //Making Background. This is a constructor\n\n\n  function backGroundSquare() {\n    this.render = function (xpos, ypos, r, g, b) {\n      p.push();\n      p.fill(r, g, b);\n      p.rect(xpos, ypos, p.windowWidth * .75, p.windowHeight * .75 / 40);\n      p.pop();\n    };\n  } //Uses the backround square constructor\n\n\n  function generateFloor() {\n    var floorBoardYPos = p.windowHeight * .75 / 6;\n    var square = new backGroundSquare();\n    var r = 138;\n    var g = 76;\n    var b = 173;\n\n    while (floorBoardYPos < p.windowHeight * .75) {\n      square.render(0, floorBoardYPos, r, g, b);\n      floorBoardYPos += p.windowHeight * .75 / 40;\n\n      if (r == 138) {\n        r = 160;\n        g = 167;\n        b = 219;\n      } else if (r == 160) {\n        r = 138;\n        g = 76;\n        b = 173;\n      }\n    }\n  } //Generate Canvas\n\n\n  function generateCanvas() {\n    p.createCanvas(p.windowWidth * .75, p.windowHeight * .75);\n    p.stroke(0);\n    p.background(160, 167, 219);\n  } //Generate walls\n\n\n  function WallBoard() {\n    this.render = function (xpos) {\n      p.push();\n      p.stroke(0);\n      p.line(xpos, 0, xpos, p.windowHeight * .75 / 6);\n      p.pop();\n    };\n  }\n\n  function generateWalls() {\n    var line = new WallBoard();\n    var distanceBetweenBoards = p.windowWidth * .75 / 45;\n\n    while (distanceBetweenBoards < p.windowWidth * .75) {\n      line.render(distanceBetweenBoards);\n      distanceBetweenBoards += p.windowWidth * .75 / 45;\n    }\n  }\n\n  function MainCharacter() {\n    this.pos = p.createVector(p.width / 2, p.height / 2);\n    this.rightVel = p.createVector(1, 0);\n    this.leftVel = p.createVector(1, 0);\n    this.forwardVel = p.createVector(1, 0);\n    this.backVel = p.createVector(1, 0);\n\n    this.render = function () {\n      p.push();\n      p.fill(0);\n      p.translate(this.pos.x, this.pos.y);\n      p.rect(30, 20, 55, 55);\n      p.pop();\n    };\n  }\n}\n;","map":{"version":3,"sources":["c:/Users/lrush/Documents/Bootcamp-Repository/lawrenceGame/client/src/components/sketches/sketchOne.js"],"names":["func","sketch","p","rotation","setup","generateCanvas","generateFloor","generateWalls","detective","MainCharacter","draw","render","backGroundSquare","xpos","ypos","r","g","b","push","fill","rect","windowWidth","windowHeight","pop","floorBoardYPos","square","createCanvas","stroke","background","WallBoard","line","distanceBetweenBoards","pos","createVector","width","height","rightVel","leftVel","forwardVel","backVel","translate","x","y"],"mappings":"AAAA,SAASA,IAAT,QAAqB,YAArB;AAEA,eAAe,SAASC,MAAT,CAAiBC,CAAjB,EAAoB;AACjC,MAAIC,QAAQ,GAAG,CAAf;;AAEAD,EAAAA,CAAC,CAACE,KAAF,GAAU,YAAY;AACrBC,IAAAA,cAAc;AACbC,IAAAA,aAAa;AACbC,IAAAA,aAAa;AACb,QAAIC,SAAS,GAAG,IAAIC,aAAJ,EAAhB;AAEH,GANC;;AAODP,EAAAA,CAAC,CAACQ,IAAF,GAAS,YAAY;AACpBF,IAAAA,SAAS,CAACG,MAAV;AACD,GAFA,CAVkC,CAcnC;;;AACA,WAASC,gBAAT,GAA2B;AACvB,SAAKD,MAAL,GAAc,UAASE,IAAT,EAAeC,IAAf,EAAqBC,CAArB,EAAwBC,CAAxB,EAA2BC,CAA3B,EAA6B;AACvCf,MAAAA,CAAC,CAACgB,IAAF;AACAhB,MAAAA,CAAC,CAACiB,IAAF,CAAOJ,CAAP,EAASC,CAAT,EAAWC,CAAX;AACAf,MAAAA,CAAC,CAACkB,IAAF,CAAOP,IAAP,EAAaC,IAAb,EAAmBZ,CAAC,CAACmB,WAAF,GAAe,GAAlC,EAAwCnB,CAAC,CAACoB,YAAF,GAAe,GAAhB,GAAqB,EAA5D;AACApB,MAAAA,CAAC,CAACqB,GAAF;AACH,KALD;AAMH,GAtBkC,CAuBnC;;;AACA,WAASjB,aAAT,GAAwB;AACpB,QAAIkB,cAAc,GAAGtB,CAAC,CAACoB,YAAF,GAAe,GAAf,GAAmB,CAAxC;AACA,QAAIG,MAAM,GAAG,IAAIb,gBAAJ,EAAb;AACA,QAAIG,CAAC,GAAG,GAAR;AACA,QAAIC,CAAC,GAAI,EAAT;AACA,QAAIC,CAAC,GAAG,GAAR;;AAEA,WAAMO,cAAc,GAAGtB,CAAC,CAACoB,YAAF,GAAe,GAAtC,EAA0C;AAC1CG,MAAAA,MAAM,CAACd,MAAP,CAAc,CAAd,EAAiBa,cAAjB,EAAiCT,CAAjC,EAAoCC,CAApC,EAAuCC,CAAvC;AACAO,MAAAA,cAAc,IAAKtB,CAAC,CAACoB,YAAF,GAAe,GAAhB,GAAqB,EAAvC;;AACC,UAAGP,CAAC,IAAI,GAAR,EAAY;AACRA,QAAAA,CAAC,GAAG,GAAJ;AACDC,QAAAA,CAAC,GAAG,GAAJ;AACAC,QAAAA,CAAC,GAAG,GAAJ;AACF,OAJD,MAIO,IAAIF,CAAC,IAAI,GAAT,EAAa;AACpBA,QAAAA,CAAC,GAAG,GAAJ;AACDC,QAAAA,CAAC,GAAI,EAAL;AACAC,QAAAA,CAAC,GAAG,GAAJ;AACE;AACD;AAEJ,GA7CkC,CA+CnC;;;AACA,WAASZ,cAAT,GAAyB;AACrBH,IAAAA,CAAC,CAACwB,YAAF,CAAexB,CAAC,CAACmB,WAAF,GAAe,GAA9B,EAAmCnB,CAAC,CAACoB,YAAF,GAAe,GAAlD;AACApB,IAAAA,CAAC,CAACyB,MAAF,CAAS,CAAT;AACAzB,IAAAA,CAAC,CAAC0B,UAAF,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB;AACH,GApDkC,CAsDnC;;;AACA,WAASC,SAAT,GAAoB;AAChB,SAAKlB,MAAL,GAAc,UAASE,IAAT,EAAc;AACxBX,MAAAA,CAAC,CAACgB,IAAF;AACAhB,MAAAA,CAAC,CAACyB,MAAF,CAAS,CAAT;AACAzB,MAAAA,CAAC,CAAC4B,IAAF,CAAOjB,IAAP,EAAa,CAAb,EAAgBA,IAAhB,EAAsBX,CAAC,CAACoB,YAAF,GAAe,GAAf,GAAmB,CAAzC;AACApB,MAAAA,CAAC,CAACqB,GAAF;AACH,KALD;AAMH;;AACD,WAAShB,aAAT,GAAwB;AACpB,QAAIuB,IAAI,GAAG,IAAID,SAAJ,EAAX;AACA,QAAIE,qBAAqB,GAAI7B,CAAC,CAACmB,WAAF,GAAe,GAAhB,GAAqB,EAAjD;;AACA,WAAOU,qBAAqB,GAAI7B,CAAC,CAACmB,WAAF,GAAe,GAA/C,EAAoD;AAChDS,MAAAA,IAAI,CAACnB,MAAL,CAAYoB,qBAAZ;AACAA,MAAAA,qBAAqB,IAAK7B,CAAC,CAACmB,WAAF,GAAe,GAAhB,GAAqB,EAA9C;AACH;AACJ;;AAED,WAASZ,aAAT,GAAwB;AACpB,SAAKuB,GAAL,GAAW9B,CAAC,CAAC+B,YAAF,CAAe/B,CAAC,CAACgC,KAAF,GAAQ,CAAvB,EAA0BhC,CAAC,CAACiC,MAAF,GAAS,CAAnC,CAAX;AACA,SAAKC,QAAL,GAAgBlC,CAAC,CAAC+B,YAAF,CAAe,CAAf,EAAiB,CAAjB,CAAhB;AACA,SAAKI,OAAL,GAAenC,CAAC,CAAC+B,YAAF,CAAe,CAAf,EAAiB,CAAjB,CAAf;AACA,SAAKK,UAAL,GAAkBpC,CAAC,CAAC+B,YAAF,CAAe,CAAf,EAAiB,CAAjB,CAAlB;AACA,SAAKM,OAAL,GAAerC,CAAC,CAAC+B,YAAF,CAAe,CAAf,EAAiB,CAAjB,CAAf;;AACA,SAAKtB,MAAL,GAAc,YAAW;AACrBT,MAAAA,CAAC,CAACgB,IAAF;AACAhB,MAAAA,CAAC,CAACiB,IAAF,CAAO,CAAP;AACAjB,MAAAA,CAAC,CAACsC,SAAF,CAAY,KAAKR,GAAL,CAASS,CAArB,EAAwB,KAAKT,GAAL,CAASU,CAAjC;AACAxC,MAAAA,CAAC,CAACkB,IAAF,CAAO,EAAP,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB;AACJlB,MAAAA,CAAC,CAACqB,GAAF;AACG,KANH;AAOH;AAEA;AAAA","sourcesContent":["import { func } from \"prop-types\";\r\n\r\nexport default function sketch (p) {\r\n  let rotation = 0;\r\n\r\n  p.setup = function () {\r\n   generateCanvas()\r\n    generateFloor()\r\n    generateWalls()\r\n    let detective = new MainCharacter()\r\n      \r\n};\r\n p.draw = function () {\r\n  detective.render()\r\n};\r\n\r\n//Making Background. This is a constructor\r\nfunction backGroundSquare(){\r\n    this.render = function(xpos, ypos, r, g, b){\r\n        p.push()\r\n        p.fill(r,g,b)\r\n        p.rect(xpos, ypos, p.windowWidth *.75, (p.windowHeight*.75)/40);\r\n        p.pop ()\r\n    }\r\n}\r\n//Uses the backround square constructor\r\nfunction generateFloor(){\r\n    let floorBoardYPos = p.windowHeight*.75/6\r\n    var square = new backGroundSquare();\r\n    let r = 138\r\n    let g =  76\r\n    let b = 173\r\n   \r\n    while(floorBoardYPos < p.windowHeight*.75){\r\n    square.render(0, floorBoardYPos, r, g, b)\r\n    floorBoardYPos += (p.windowHeight*.75)/40\r\n     if(r == 138){\r\n         r = 160;\r\n        g = 167;\r\n        b = 219\r\n     } else if (r == 160){\r\n     r = 138;\r\n    g =  76;\r\n    b = 173\r\n     }\r\n    }\r\n\r\n}\r\n\r\n//Generate Canvas\r\nfunction generateCanvas(){\r\n    p.createCanvas(p.windowWidth *.75, p.windowHeight*.75);\r\n    p.stroke(0);\r\n    p.background(160, 167, 219);\r\n}\r\n\r\n//Generate walls\r\nfunction WallBoard(){\r\n    this.render = function(xpos){\r\n        p.push()\r\n        p.stroke(0)\r\n        p.line(xpos, 0, xpos, p.windowHeight*.75/6);\r\n        p.pop ()\r\n    }\r\n}\r\nfunction generateWalls(){\r\n    let line = new WallBoard()\r\n    let distanceBetweenBoards = (p.windowWidth *.75)/45\r\n    while (distanceBetweenBoards < (p.windowWidth *.75)){\r\n        line.render(distanceBetweenBoards)\r\n        distanceBetweenBoards += (p.windowWidth *.75)/45\r\n    }\r\n}\r\n\r\nfunction MainCharacter(){\r\n    this.pos = p.createVector(p.width/2, p.height/2)\r\n    this.rightVel = p.createVector(1,0)\r\n    this.leftVel = p.createVector(1,0)\r\n    this.forwardVel = p.createVector(1,0)\r\n    this.backVel = p.createVector(1,0)\r\n    this.render = function (){\r\n        p.push()\r\n        p.fill(0)\r\n        p.translate(this.pos.x, this.pos.y)\r\n        p.rect(30, 20, 55, 55);\r\n    p.pop()\r\n      }\r\n}\r\n\r\n};"]},"metadata":{},"sourceType":"module"}