{"ast":null,"code":"import { func } from \"prop-types\";\nvar detective;\nexport default function sketch(p) {\n  var rotation = 0;\n\n  p.setup = function () {\n    generateCanvas();\n    detective = new MainCharacter();\n  };\n\n  p.draw = function () {\n    generateFloor();\n    generateWalls();\n    detective.render();\n    detective.update();\n  };\n\n  p.keyPressed = function () {\n    if (p.keyCode == 68) {\n      console.log(\"right\");\n      detective.rightmove = true;\n      console.log(detective.rightmove);\n    } else if (p.keyCode == 65) {\n      console.log(\"left\");\n      detective.leftmove = true;\n    } else if (p.keyCode == 87) {\n      console.log('forward');\n      detective.frontmove = true;\n    } else if (p.keyCode == 83) {\n      detective.backmove = true;\n    }\n  }; //Making Background. This is a constructor\n\n\n  function backGroundSquare() {\n    this.render = function (xpos, ypos, r, g, b) {\n      p.push();\n      p.fill(r, g, b);\n      p.rect(xpos, ypos, p.windowWidth * .75, p.windowHeight * .75 / 40);\n      p.pop();\n    };\n  } //Uses the backround square constructor\n\n\n  function generateFloor() {\n    var floorBoardYPos = p.windowHeight * .75 / 6;\n    var square = new backGroundSquare();\n    var r = 138;\n    var g = 76;\n    var b = 173;\n\n    while (floorBoardYPos < p.windowHeight * .75) {\n      square.render(0, floorBoardYPos, r, g, b);\n      floorBoardYPos += p.windowHeight * .75 / 40;\n\n      if (r == 138) {\n        r = 160;\n        g = 167;\n        b = 219;\n      } else if (r == 160) {\n        r = 138;\n        g = 76;\n        b = 173;\n      }\n    }\n  } //Generate Canvas\n\n\n  function generateCanvas() {\n    p.createCanvas(p.windowWidth * .75, p.windowHeight * .75);\n    p.stroke(0);\n    p.background(160, 167, 219);\n  } //Generate walls\n\n\n  function WallBoard() {\n    this.render = function (xpos) {\n      p.push();\n      p.stroke(0);\n      p.line(xpos, 0, xpos, p.windowHeight * .75 / 6);\n      p.pop();\n    };\n  }\n\n  function generateWalls() {\n    var line = new WallBoard();\n    var distanceBetweenBoards = p.windowWidth * .75 / 45;\n\n    while (distanceBetweenBoards < p.windowWidth * .75) {\n      line.render(distanceBetweenBoards);\n      distanceBetweenBoards += p.windowWidth * .75 / 45;\n    }\n  }\n\n  function MainCharacter() {\n    this.pos = p.createVector(p.width / 2, p.height / 2);\n    this.rightVel = p.createVector(1, 1);\n    this.leftVel = p.createVector(1, 0);\n    this.forwardVel = p.createVector(1, 0);\n    this.backVel = p.createVector(1, 0);\n    this.backmove = false;\n    this.frontmove = false;\n    this.leftmove = false;\n    this.rightmove = false;\n\n    this.render = function () {\n      var _this = this;\n\n      p.push();\n      p.fill(0);\n      p.translate(this.pos.x, this.pos.y);\n      p.rect(30, 20, 55, 55);\n      p.pop();\n\n      this.update = function () {\n        if (_this.rightmove) {\n          _this.pos.add(_this.rightVel);\n        }\n\n        if (_this.leftmove) {\n          _this.pos.add(_this.leftVel);\n        }\n\n        if (_this.backmove) {\n          _this.pos.add(_this.backVel);\n        }\n\n        if (_this.frontmove) {\n          _this.pos.add(_this.forwardVel);\n        } //this.vel.mult(0.95)\n\n      };\n    };\n  }\n}\n;","map":{"version":3,"sources":["c:/Users/lrush/Documents/Bootcamp-Repository/lawrenceGame/client/src/components/sketches/sketchOne.js"],"names":["func","detective","sketch","p","rotation","setup","generateCanvas","MainCharacter","draw","generateFloor","generateWalls","render","update","keyPressed","keyCode","console","log","rightmove","leftmove","frontmove","backmove","backGroundSquare","xpos","ypos","r","g","b","push","fill","rect","windowWidth","windowHeight","pop","floorBoardYPos","square","createCanvas","stroke","background","WallBoard","line","distanceBetweenBoards","pos","createVector","width","height","rightVel","leftVel","forwardVel","backVel","translate","x","y","add"],"mappings":"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","sourcesContent":["import { func } from \"prop-types\";\r\nlet detective\r\nexport default function sketch(p) {\r\n    let rotation = 0;\r\n\r\n    p.setup = function () {\r\n        generateCanvas()\r\n        detective = new MainCharacter()\r\n\r\n\r\n\r\n    };\r\n    p.draw = function () {\r\n        generateFloor()\r\n        generateWalls()\r\n        detective.render()\r\n        detective.update()\r\n    };\r\n    p.keyPressed = function () {\r\n        if (p.keyCode == 68){\r\n          console.log(\"right\")\r\n          detective.rightmove = true;\r\n          console.log(detective.rightmove)\r\n        } else if  (p.keyCode == 65){\r\n          console.log(\"left\")\r\n          detective.leftmove = true;\r\n        } else if (p.keyCode == 87){\r\n          console.log('forward')\r\n          detective.frontmove = true;\r\n        } else if (p.keyCode == 83){\r\n            detective.backmove = true;\r\n        }\r\n      }\r\n      \r\n    //Making Background. This is a constructor\r\n    function backGroundSquare() {\r\n        this.render = function (xpos, ypos, r, g, b) {\r\n            p.push()\r\n            p.fill(r, g, b)\r\n            p.rect(xpos, ypos, p.windowWidth * .75, (p.windowHeight * .75) / 40);\r\n            p.pop()\r\n        }\r\n    }\r\n    //Uses the backround square constructor\r\n    function generateFloor() {\r\n        let floorBoardYPos = p.windowHeight * .75 / 6\r\n        var square = new backGroundSquare();\r\n        let r = 138\r\n        let g = 76\r\n        let b = 173\r\n\r\n        while (floorBoardYPos < p.windowHeight * .75) {\r\n            square.render(0, floorBoardYPos, r, g, b)\r\n            floorBoardYPos += (p.windowHeight * .75) / 40\r\n            if (r == 138) {\r\n                r = 160;\r\n                g = 167;\r\n                b = 219\r\n            } else if (r == 160) {\r\n                r = 138;\r\n                g = 76;\r\n                b = 173\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //Generate Canvas\r\n    function generateCanvas() {\r\n        p.createCanvas(p.windowWidth * .75, p.windowHeight * .75);\r\n        p.stroke(0);\r\n        p.background(160, 167, 219);\r\n    }\r\n\r\n    //Generate walls\r\n    function WallBoard() {\r\n        this.render = function (xpos) {\r\n            p.push()\r\n            p.stroke(0)\r\n            p.line(xpos, 0, xpos, p.windowHeight * .75 / 6);\r\n            p.pop()\r\n        }\r\n    }\r\n    function generateWalls() {\r\n        let line = new WallBoard()\r\n        let distanceBetweenBoards = (p.windowWidth * .75) / 45\r\n        while (distanceBetweenBoards < (p.windowWidth * .75)) {\r\n            line.render(distanceBetweenBoards)\r\n            distanceBetweenBoards += (p.windowWidth * .75) / 45\r\n        }\r\n    }\r\n\r\n    function MainCharacter() {\r\n        this.pos = p.createVector(p.width / 2, p.height / 2)\r\n        this.rightVel = p.createVector(1, 1)\r\n        this.leftVel = p.createVector(1, 0)\r\n        this.forwardVel = p.createVector(1, 0)\r\n        this.backVel = p.createVector(1, 0)\r\n        this.backmove = false;\r\n        this.frontmove = false;\r\n        this.leftmove = false;\r\n        this.rightmove = false;\r\n        this.render = function () {\r\n            p.push()\r\n            p.fill(0)\r\n            p.translate(this.pos.x, this.pos.y)\r\n            p.rect(30, 20, 55, 55);\r\n            p.pop()\r\n            this.update = () => {\r\n                if (this.rightmove) {\r\n                    this.pos.add(this.rightVel)\r\n                }\r\n                if (this.leftmove) {\r\n                    this.pos.add(this.leftVel)\r\n                }\r\n                if (this.backmove) {\r\n                    this.pos.add(this.backVel)\r\n                }\r\n                if (this.frontmove) {\r\n                    this.pos.add(this.forwardVel)\r\n                }\r\n                //this.vel.mult(0.95)\r\n            }\r\n        }\r\n    }\r\n\r\n};"]},"metadata":{},"sourceType":"module"}